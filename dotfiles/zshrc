# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="angelika"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git-prompt)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# brew setup done in .zprofile because:
# - it needs to happen first (before zshrc_priv)
# - it's different on different laptops depending on single user vs multi user

. $(brew --prefix asdf)/libexec/asdf.sh

# append completions to fpath
fpath=(${ASDF_DIR}/completions $fpath)
# initialise completions with ZSH's compinit
autoload -Uz compinit
compinit

# replace sed with gnu-sed
export PATH="$(brew --prefix)/opt/gnu-sed/libexec/gnubin:$PATH"
export PATH="$PATH:/opt/local/bin:/opt/local/sbin"
export PATH=$PATH:/usr/local/sbin
export PATH=$PATH:~/bin

export GOPATH=$HOME/golang
export GOROOT=/usr/local/opt/go/libexec
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:$GOROOT/bin
export PATH=$PATH:~/Library/Python/3.7/bin

export EXERCISM_PRETTIER_VERSION=2.3.2
export KERL_BUILD_DOCS='yes'

alias ls="ls -hal"
alias ios="open /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app"

export PLUG_EDITOR='x-mine://open?file=__FILE__&line=__LINE__'
export ECTO_EDITOR='webstorm'
export ERL_AFLAGS="-kernel shell_history enabled"

npm() {
  if [ -f yarn.lock ]; then
    echo 'use yarn';
  else
    command npm --version;
    command npm $*;
  fi
}

yarn() {
  if [ -f package-lock.json ]; then
    echo 'use npm';
  else
    command yarn $*;
  fi
}

rubymine() {
  RUBYMINE="/Applications/RubyMine.app/Contents/MacOS/rubymine"
  if [[ $@ == "." ]]; then
    command $RUBYMINE $(pwd)
  else
    command $RUBYMINE "$@"
  fi
}

webstorm() {
  WEBSTORM="~/Applications/WebStorm.app/Contents/MacOS/webstorm"
  if [[ $@ == "." ]]; then
    command $WEBSTORM $(pwd)
  else
    command $WEBSTORM "$@"
  fi
}

killscreens() {
  screen -ls | grep Detached | cut -d. -f1 | awk '{print $1}' | xargs kill
}

commit-diff-against-origin() {
  BRANCH=$(git rev-parse --abbrev-ref HEAD)
  git log --left-right --graph --cherry-pick --oneline origin/$BRANCH..$BRANCH
}

gitr() {
  local GIT_COMMAND=$2;
  local MAX_DEPTH=$1;
  local OLD_PATH=$(pwd)

  for FILE in $(command ls); do
    if [ -d $FILE ]; then
      cd $FILE &&
      printf "\n$txtylw$(pwd)$txtrst\n" &&

      if [ -d .git ]; then
        git $GIT_COMMAND;
      else
        printf "$txtred    not a git repository$txtrst";
      fi

      if ((MAX_DEPTH > 1)); then
        gitr $(expr $MAX_DEPTH - 1) $GIT_COMMAND;
      fi

      cd ..;
    fi
  done

  cd $OLD_PATH;
}

bye-bye-branches() {
  git fetch -p && for branch in `git branch -vv | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done
}

exercism-download-and-test() {
  local uuid=$1;
  local output=$(exercism download --uuid $uuid);
  echo $output;
  local dir=$(echo $output | sed 's/.*Downloaded to //');
  cd $dir;
  mix test --include pending;
}

announce() {
  "$@"
  ret=$?
  if [[ $ret -eq 0 ]]
  then
    echo "Command finished: '$@'" | say -f -
  else
    echo "Command failed: '$@'" | say -f -
  fi

  return $ret
}

if [ -f ~/.zshrc_priv ]; then
  source ~/.zshrc_priv
fi


alias subl='/Applications/Sublime\ Text.app/Contents/MacOS/sublime_text'
export LANG=en_US.UTF-8
export LC_ALL=$LANG
export LIBRARY_PATH=$LIBRARY_PATH:$(brew --prefix zstd)/lib/
export LIBRARY_PATH=$LIBRARY_PATH:$(brew --prefix libssh2)/lib/
export LIBRARY_PATH=$LIBRARY_PATH:$(brew --prefix libssh)/lib/

