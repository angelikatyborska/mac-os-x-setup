export PATH="/opt/local/bin:/opt/local/sbin:$PATH"
export PATH=$PATH:/usr/local/sbin
export PATH=$PATH:~/bin

export GOPATH=$HOME/golang
export GOROOT=/usr/local/opt/go/libexec
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:$GOROOT/bin
export PATH=$PATH:~/Library/Python/3.7/bin

alias pdflatex="/Library/TeX/Root/bin/x86_64-darwin/pdflatex"
alias ls="ls -hal"

export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

export GITAWAREPROMPT=~/.bash/git-aware-prompt
source "${GITAWAREPROMPT}/main.sh"

export PS1="\[$txtpur\]\u\[$txtrst\] at \[$txtblu\]\h\[$txtrst\] in \[$txtylw\]\w\[$txtrst\] \[$txtcyn\]\$git_branch\[$txtred\]\$git_dirty\[$txtrst\]\n\$ "

export HISTCONTROL=ignoreboth
export HISTSIZE=10000
export HISTFILESIZE=10000
export ERL_AFLAGS="-kernel shell_history enabled"

rubymine() {
  RUBYMINE="/Applications/RubyMine.app/Contents/MacOS/rubymine"
  if [[ $@ == "." ]]; then
    command $RUBYMINE $(pwd)
  else
    command $RUBYMINE "$@"
  fi
}

killscreens() {
  screen -ls | grep Detached | cut -d. -f1 | awk '{print $1}' | xargs kill
}

commit-diff-against-origin() {
  BRANCH=$(git rev-parse --abbrev-ref HEAD)
  git log --left-right --graph --cherry-pick --oneline origin/$BRANCH..$BRANCH
}

gitr() {
  local GIT_COMMAND=$2;
  local MAX_DEPTH=$1;
  local OLD_PATH=$(pwd)

  for FILE in $(command ls); do
    if [ -d $FILE ]; then
      cd $FILE &&
      printf "\n$txtylw$(pwd)$txtrst\n" &&

      if [ -d .git ]; then
        git $GIT_COMMAND;
      else
        printf "$txtred    not a git repository$txtrst";
      fi

      if ((MAX_DEPTH > 1)); then
        gitr $(expr $MAX_DEPTH - 1) $GIT_COMMAND;
      fi

      cd ..;
    fi
  done

  cd $OLD_PATH;
}

bye-bye-branches() {
  git fetch -p && for branch in `git branch -vv | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done
}

exercism-download-and-test() {
  local uuid=$1;
  local output=$(exercism download --uuid $uuid);
  echo $output;
  local dir=$(echo $output | sed 's/.*Downloaded to //');
  cd $dir;
  mix test --include pending;
}

if [ -f ~/.bash_profile_priv ]; then
  source ~/.bash_profile_priv
fi

. $HOME/.asdf/asdf.sh

. $HOME/.asdf/completions/asdf.bash
